import logging
from aiogram import Bot, Dispatcher, types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Text
from aiogram.contrib.middlewares.logging import LoggingMiddleware
from aiogram.types import ParseMode
from aiogram.utils import executor
from bot_config import TOKEN
from aiogram.dispatcher.filters.state import State, StatesGroup

logging.basicConfig(level=logging.INFO)

bot = Bot(token=TOKEN)
dp = Dispatcher(bot)
dp.middleware.setup(LoggingMiddleware())

class Form(StatesGroup):
    Name = State()

@dp.message_handler(commands=['start'])
async def cmd_start(message: types.Message):
    username = message.from_user.first_name

    keyboard_markup = types.ReplyKeyboardMarkup(row_width=2)
    itembtn1 = types.KeyboardButton('–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ã CS:GO')
    itembtn2 = types.KeyboardButton('–ù–∞–π—Ç–∏ –ø—Ä–µ–¥–º–µ—Ç')
    itembtn3 = types.KeyboardButton('–ü–æ–∏—Å–∫ –æ—à–∏–±–æ—á–Ω—ã—Ö –æ—Ä–¥–µ—Ä–æ–≤')
    keyboard_markup.add(itembtn1, itembtn2, itembtn3)
    
    await message.answer(f"–ü—Ä–∏–≤–µ—Ç, {username}, –¥–∞–≤–∞–π –Ω–∞—á–Ω–µ–º. –ß—Ç–æ –±—ã —Ç—ã —Ö–æ—Ç–µ–ª —Å–¥–µ–ª–∞—Ç—å?",
                         reply_markup=keyboard_markup)

@dp.message_handler(Text(equals='–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ã CS:GO'))
async def view_items(message: types.Message):
    link_button = types.InlineKeyboardMarkup()
    url_btn = types.InlineKeyboardButton(text="–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç", url="https://buff.163.com/?game=csgo") 
    link_button.add(url_btn)
    await message.answer("üßê –•–º, –ø–æ—Ö–æ–∂–µ –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –ª–æ—Ç—ã —É–∂–µ –≤—ã–∫—É–ø–∏–ª–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ—Å–µ—Ç–∏—Ç–µ –Ω–∞—à —Å–∞–π—Ç.", reply_markup=link_button)

@dp.message_handler(Text(equals='–ù–∞–π—Ç–∏ –ø—Ä–µ–¥–º–µ—Ç'))
async def start_search(message: types.Message):
    await Form.Name.set()
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞:")

@dp.message_handler(lambda message: message.text == '–ü–æ–∏—Å–∫ –æ—à–∏–±–æ—á–Ω—ã—Ö –æ—Ä–¥–µ—Ä–æ–≤')
async def view_items(message: types.Message):
    link_button = types.InlineKeyboardMarkup()
    url_btn = types.InlineKeyboardButton(text="–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç", url="https://buff.163.com/?game=csgo") 
    link_button.add(url_btn)
    await message.answer("–û—É, —É –º–µ–Ω—è —Å–ª–µ—Ç–µ–ª —Å–µ—Ä–≤–∏—Å–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç, –ø–æ—Å–µ—Ç–∏—Ç–µ –Ω–∞—à —Å–∞–π—Ç, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ —ç—Ç–æ—Ç –ø—Ä–µ–¥–º–µ—Ç:", reply_markup=link_button)

@dp.message_handler(state=Form.Name)
async def process_name(message: types.Message, state: FSMContext):
    link_button = types.InlineKeyboardMarkup()
    url_btn = types.InlineKeyboardButton(text="–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç", url="https://buff.163.com/?game=csgo") 
    link_button.add(url_btn)
    await message.answer("–û—É, —É –º–µ–Ω—è —Å–ª–µ—Ç–µ–ª —Å–µ—Ä–≤–∏—Å–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç, –ø–æ—Å–µ—Ç–∏—Ç–µ –Ω–∞—à —Å–∞–π—Ç, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ —ç—Ç–æ—Ç –ø—Ä–µ–¥–º–µ—Ç:", reply_markup=link_button)
    await state.finish()

@dp.message_handler(lambda message: message.text not in ['–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ã CS:GO', '–ù–∞–π—Ç–∏ –ø—Ä–µ–¥–º–µ—Ç', '–ü–æ–∏—Å–∫ –æ—à–∏–±–æ—á–Ω—ã—Ö –æ—Ä–¥–µ—Ä–æ–≤'])
async def echo_all(message: types.Message):
    link_button = types.InlineKeyboardMarkup()
    url_btn = types.InlineKeyboardButton(text="–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç", url="https://buff.163.com/?game=csgo") 
    link_button.add(url_btn)
    await message.answer("–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, —É–∂–µ —Å–æ–æ–±—â–∏–ª –∞–¥–º–∏–Ω—É. –¢–∞–∫ —á—Ç–æ –≤—Å—ë —á—Ç–æ —è –º–æ–≥—É –≤–∞–º —Å–µ–π—á–∞—Å –¥–∞—Ç—å —ç—Ç–æ —Å—Å—ã–ª–∫—É –Ω–∞ –Ω–∞—à —Å–∞–π—Ç‚ò∫Ô∏è", reply_markup=link_button)

if __name__ == '__main__':
    executor.start_polling(dp)
